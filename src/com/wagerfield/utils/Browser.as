/** * Copyright (C) 2011 by Matthew Wagerfield *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */package com.wagerfield.utils{	import flash.external.ExternalInterface;	import flash.system.Capabilities;	/**	 * @author Matthew Wagerfield	 */	public class Browser	{		private static const JS_PREFIX:String = "browser.";		private static const ACTIVE_X:String = "ActiveX";			private static var _initialised:Boolean = false;		private static var _available:Boolean = false;		private static var _name:String = "Unconfigured";		private static var _version:String = "Unconfigured";		private static var _OS:String = "Unconfigured";		/**		 * Utility for detecting the containing Browser, Version and Operating System.		 */		public static function init():void		{			if (Capabilities.playerType != ACTIVE_X && ExternalInterface.available)			{				_available = true;			}			if (_available && !_initialised)			{				ExternalInterface.addCallback("onDetect", onDetect);				ExternalInterface.call(JS_PREFIX + "detect");			}		}		private static function onDetect(name:String, version:String, OS:String):void		{			_initialised = true;			_name = name;			_version = version;			_OS = OS;		}		/** Returns whether or not the Flash Player is embedded in a Browser. */		public static function get available():Boolean		{			return _available;		}		/** Returns the containing Browser. */		public static function get name():String		{			return _name;		}		/** Returns the containing Browser Version. */		public static function get version():String		{			return _version;		}		/** Returns the containing Operating System. */		public static function get OS():String		{			return _OS;		}	}}