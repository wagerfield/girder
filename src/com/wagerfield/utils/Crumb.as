/** * Copyright (C) 2011 by Matthew Wagerfield *  * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */package com.wagerfield.utils{	import flash.utils.Dictionary;	/**	 * @author Matthew Wagerfield	 */	public class Crumb	{		private var _paramDict:Dictionary;		private var _paramNameArr:Array;		private var _path:String;		private var _title:String;		private var _query:String;		private var _data:Object;		/**		 * Initialises the Crumb class.		 * 		 * @param path Path of the Crumb, delimiting directories with '/' eg: '/site/section/page'.		 * @param title If using SWF Address, sets the title of the page.		 * @param data Optional data Object to attach to the Crumb.		 */		public function Crumb(path:String, title:String = undefined, query:String = null, data:Object = null):void		{			_path = path;			_title = title;			_query = query;			_data = data;			_paramDict = new Dictionary();			_paramNameArr = new Array();			processQuery();		}		private function processQuery():void		{			if (_query == null)			{				return;			}			else			{				resetQuery();							var queryPat:RegExp = /\??/g;				var queryArr:Array = _query.match(queryPat);								if (queryArr && queryArr.length == 1)				{					var params:String = _query.substring(_query.indexOf("?") + 1);					var paramArr:Array = params.split("&");						for (var i:uint = 0; i < paramArr.length; i++)					{						var variableArr:Array = String(paramArr[i]).split("=");							if (variableArr.length == 2)						{							var paramName:String = variableArr[0];							var paramValue:String = variableArr[1];								if (paramName != "" && paramValue != "")							{								_paramNameArr.push(paramName);								_paramDict[paramName] = paramValue;							}						}					}				}			}		}								/** Returns the Query Dictionary and Array. */		public function resetQuery():void		{			_paramNameArr.length = 0;			for (var key : String in _paramDict)			{				_paramDict[key] = null;			}		}		/** @param parameterName Returns the value of a given parameter in the Crumb Query. If no name or value can be found, returns null. */		public function getParameter(parameterName:String):String		{			if (_paramDict[parameterName] != null)			{				return _paramDict[parameterName];			}			else			{				return null;			}		}		/** Returns an Array of valid parameter names. */		public function getParameterNames():Array		{			if (_paramNameArr.length)			{				return _paramNameArr;			}			else			{				return null;			}		}		/** @param value Sets the Query of the Crumb. */		public function set query(value:String):void		{			_query = value;			processQuery();		}		/** @param value Sets the Data Object of the Crumb. */		public function set data(value:Object):void		{			_data = value;		}		/** Returns the path of the Crumb, delimiting directories with '/' eg: '/site/section/page'. */		public function get path():String		{			return _path;		}		/** Returns the Title of the Crumb. */		public function get title():String		{			return _title;		}		/** Returns any Queries of the Crumb. */		public function get query():String		{			return _query;		}		/** Returns the Crumb Data Object. */		public function get data():Object		{			return _data;		}	}}